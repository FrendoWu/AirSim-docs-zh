{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u6765\u5230 AirSim AirSim\u662f\u4e00\u4e2a\u57fa\u4e8e\u865a\u5e7b\u5f15\u64ce\uff08\u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u652f\u6301Unity\u7684\u8bd5\u9a8c\u6027\u7248\u672c\uff09\u4ee5\u6a21\u62df\u6c7d\u8f66\u3001\u65e0\u4eba\u673a\u7684\u6a21\u62df\u5668\u3002AirSim\u4eff\u771f\u6a21\u62df\u5e73\u53f0\u662f\u5f00\u6e90\u3001\u8de8\u5e73\u53f0\u3001\u652f\u6301\u8bf8\u5982PX4\u7b49\u5e38\u89c1\u7684\u786c\u4ef6\u5728\u73af\uff08hardware-in-loop\uff09\u98de\u884c\u9065\u63a7\u5668\u3002AirSim\u662f\u4e00\u4e2a\u865a\u5e7b\u5f15\u64ce\u63d2\u4ef6\uff0c\u6240\u4ee5\u5b83\u53ef\u88ab\u79fb\u690d\u5230\u4efb\u610f\u7684\u865a\u5e7b\u73af\u5883\u4e2d\u3002\u540c\u6837\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u8bd5\u9a8c\u6027\u7684Unity\u7248\u672c\u63d2\u4ef6\u3002 \u6211\u4eec\u7684\u76ee\u6807\u662f\u5c06AirSim\u53d1\u5c55\u6210\u4e00\u4e2a\u53ef\u4ee5\u5b9e\u9a8c\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u7684\u6df1\u5ea6\u5b66\u4e60\uff0c\u8ba1\u7b97\u673a\u89c6\u89c9\u548c\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u7684\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u5e73\u53f0\u3002 \u4e3a\u6b64\uff0cAirSim\u8fd8\u516c\u5f00\u4e86API\uff0c\u7528\u4ee5\u4ee5\u72ec\u7acb\u4e8e\u5e73\u53f0\u7684\u65b9\u5f0f\u68c0\u7d22\u6570\u636e\u548c\u63a7\u5236\u8f66\u8f86\u3002 \u67e5\u770b\u4e00\u5206\u4e09\u5341\u79d2\u7684\u5feb\u901f\u6f14\u793a AirSim\u4e2d\u8fd0\u884c\u65e0\u4eba\u673a AirSim\u4e2d\u8fd0\u884c\u6c7d\u8f66 \u6700\u8fd1\u66f4\u65b0 \u6dfb\u52a0\u4e86\u5929\u6c14\u73af\u5883\u548c\u76f8\u5173\u7684 APIs Added Time of Day API An experimental integration of AirSim on Unity is now available. Learn more in Unity blog post . New environments : Forest, Plains (windmill farm), TalkingHeads (human head simulation), TrapCam (animal detection via camera) Highly efficient NoDisplay view mode to turn off main screen rendering so you can capture images at high rate Lidar Sensor Case Study: Formula Student Technion Driverless Multi-Vehicle Capability ROS publisher For complete list of changes, view our Changelog How to Get It Windows Download binaries Build it Linux Build it How to Use It Documentation View our detailed documentation on all aspects of AirSim. Manual drive If you have remote control (RC) as shown below, you can manually control the drone in the simulator. For cars, you can use arrow keys to drive manually. More details Programmatic control AirSim exposes APIs so you can interact with the vehicle in the simulation programmatically. You can use these APIs to retrieve images, get state, control the vehicle and so on. The APIs are exposed through the RPC, and are accessible via a variety of languages, including C++, Python, C# and Java. These APIs are also available as part of a separate, independent cross-platform library, so you can deploy them on a companion computer on your vehicle. This way you can write and test your code in the simulator, and later execute it on the real vehicles. Transfer learning and related research is one of our focus areas. Note that you can use SimMode setting to specify the default vehicle or the new ComputerVision mode so you don't get prompted each time you start AirSim. More details Gathering training data There are two ways you can generate training data from AirSim for deep learning. The easiest way is to simply press the record button in the lower right corner. This will start writing pose and images for each frame. The data logging code is pretty simple and you can modify it to your heart's content. A better way to generate training data exactly the way you want is by accessing the APIs. This allows you to be in full control of how, what, where and when you want to log data. Computer Vision mode Yet another way to use AirSim is the so-called \"Computer Vision\" mode. In this mode, you don't have vehicles or physics. You can use the keyboard to move around the scene, or use APIs to position available cameras in any arbitrary pose, and collect images such as depth, disparity, surface normals or object segmentation. More details Weather Effects Press F10 to see various options available for weather effects. You can also control the weather using APIs . Press F1 to see other options available. Tutorials Video - Setting up AirSim with Pixhawk Tutorial by Chris Lovett Video - Using AirSim with Pixhawk Tutorial by Chris Lovett Video - Using off-the-self environments with AirSim by Jim Piavis Reinforcement Learning with AirSim by Ashish Kapoor The Autonomous Driving Cookbook by Microsoft Deep Learning and Robotics Garage Chapter Using TensorFlow for simple collision avoidance by Simon Levy and WLU team Participate Paper More technical details are available in AirSim paper (FSR 2017 Conference) . Please cite this as: @inproceedings{airsim2017fsr, author = {Shital Shah and Debadeepta Dey and Chris Lovett and Ashish Kapoor}, title = {AirSim: High-Fidelity Visual and Physical Simulation for Autonomous Vehicles}, year = {2017}, booktitle = {Field and Service Robotics}, eprint = {arXiv:1705.05065}, url = {https://arxiv.org/abs/1705.05065} } Contribute Please take a look at open issues if you are looking for areas to contribute to. More on AirSim design More on code structure Contribution Guidelines Trello Board Who is Using AirSim? We are maintaining a list of a few projects, people and groups that we are aware of. If you would like to be featured in this list please make a request here . Contact Join the AirSim group on Facebook to stay up to date or ask any questions. FAQ If you run into problems, check the FAQ and feel free to post issues in the AirSim repository. License This project is released under the MIT License. Please review the License file for more details.","title":"\u4e3b\u9875"},{"location":"#airsim","text":"AirSim\u662f\u4e00\u4e2a\u57fa\u4e8e\u865a\u5e7b\u5f15\u64ce\uff08\u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u652f\u6301Unity\u7684\u8bd5\u9a8c\u6027\u7248\u672c\uff09\u4ee5\u6a21\u62df\u6c7d\u8f66\u3001\u65e0\u4eba\u673a\u7684\u6a21\u62df\u5668\u3002AirSim\u4eff\u771f\u6a21\u62df\u5e73\u53f0\u662f\u5f00\u6e90\u3001\u8de8\u5e73\u53f0\u3001\u652f\u6301\u8bf8\u5982PX4\u7b49\u5e38\u89c1\u7684\u786c\u4ef6\u5728\u73af\uff08hardware-in-loop\uff09\u98de\u884c\u9065\u63a7\u5668\u3002AirSim\u662f\u4e00\u4e2a\u865a\u5e7b\u5f15\u64ce\u63d2\u4ef6\uff0c\u6240\u4ee5\u5b83\u53ef\u88ab\u79fb\u690d\u5230\u4efb\u610f\u7684\u865a\u5e7b\u73af\u5883\u4e2d\u3002\u540c\u6837\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u8bd5\u9a8c\u6027\u7684Unity\u7248\u672c\u63d2\u4ef6\u3002 \u6211\u4eec\u7684\u76ee\u6807\u662f\u5c06AirSim\u53d1\u5c55\u6210\u4e00\u4e2a\u53ef\u4ee5\u5b9e\u9a8c\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u7684\u6df1\u5ea6\u5b66\u4e60\uff0c\u8ba1\u7b97\u673a\u89c6\u89c9\u548c\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u7684\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u5e73\u53f0\u3002 \u4e3a\u6b64\uff0cAirSim\u8fd8\u516c\u5f00\u4e86API\uff0c\u7528\u4ee5\u4ee5\u72ec\u7acb\u4e8e\u5e73\u53f0\u7684\u65b9\u5f0f\u68c0\u7d22\u6570\u636e\u548c\u63a7\u5236\u8f66\u8f86\u3002 \u67e5\u770b\u4e00\u5206\u4e09\u5341\u79d2\u7684\u5feb\u901f\u6f14\u793a AirSim\u4e2d\u8fd0\u884c\u65e0\u4eba\u673a AirSim\u4e2d\u8fd0\u884c\u6c7d\u8f66","title":"\u6b22\u8fce\u6765\u5230 AirSim"},{"location":"#_1","text":"\u6dfb\u52a0\u4e86\u5929\u6c14\u73af\u5883\u548c\u76f8\u5173\u7684 APIs Added Time of Day API An experimental integration of AirSim on Unity is now available. Learn more in Unity blog post . New environments : Forest, Plains (windmill farm), TalkingHeads (human head simulation), TrapCam (animal detection via camera) Highly efficient NoDisplay view mode to turn off main screen rendering so you can capture images at high rate Lidar Sensor Case Study: Formula Student Technion Driverless Multi-Vehicle Capability ROS publisher For complete list of changes, view our Changelog","title":"\u6700\u8fd1\u66f4\u65b0"},{"location":"#how-to-get-it","text":"","title":"How to Get It"},{"location":"#windows","text":"Download binaries Build it","title":"Windows"},{"location":"#linux","text":"Build it","title":"Linux"},{"location":"#how-to-use-it","text":"","title":"How to Use It"},{"location":"#documentation","text":"View our detailed documentation on all aspects of AirSim.","title":"Documentation"},{"location":"#manual-drive","text":"If you have remote control (RC) as shown below, you can manually control the drone in the simulator. For cars, you can use arrow keys to drive manually. More details","title":"Manual drive"},{"location":"#programmatic-control","text":"AirSim exposes APIs so you can interact with the vehicle in the simulation programmatically. You can use these APIs to retrieve images, get state, control the vehicle and so on. The APIs are exposed through the RPC, and are accessible via a variety of languages, including C++, Python, C# and Java. These APIs are also available as part of a separate, independent cross-platform library, so you can deploy them on a companion computer on your vehicle. This way you can write and test your code in the simulator, and later execute it on the real vehicles. Transfer learning and related research is one of our focus areas. Note that you can use SimMode setting to specify the default vehicle or the new ComputerVision mode so you don't get prompted each time you start AirSim. More details","title":"Programmatic control"},{"location":"#gathering-training-data","text":"There are two ways you can generate training data from AirSim for deep learning. The easiest way is to simply press the record button in the lower right corner. This will start writing pose and images for each frame. The data logging code is pretty simple and you can modify it to your heart's content. A better way to generate training data exactly the way you want is by accessing the APIs. This allows you to be in full control of how, what, where and when you want to log data.","title":"Gathering training data"},{"location":"#computer-vision-mode","text":"Yet another way to use AirSim is the so-called \"Computer Vision\" mode. In this mode, you don't have vehicles or physics. You can use the keyboard to move around the scene, or use APIs to position available cameras in any arbitrary pose, and collect images such as depth, disparity, surface normals or object segmentation. More details","title":"Computer Vision mode"},{"location":"#weather-effects","text":"Press F10 to see various options available for weather effects. You can also control the weather using APIs . Press F1 to see other options available.","title":"Weather Effects"},{"location":"#tutorials","text":"Video - Setting up AirSim with Pixhawk Tutorial by Chris Lovett Video - Using AirSim with Pixhawk Tutorial by Chris Lovett Video - Using off-the-self environments with AirSim by Jim Piavis Reinforcement Learning with AirSim by Ashish Kapoor The Autonomous Driving Cookbook by Microsoft Deep Learning and Robotics Garage Chapter Using TensorFlow for simple collision avoidance by Simon Levy and WLU team","title":"Tutorials"},{"location":"#participate","text":"","title":"Participate"},{"location":"#paper","text":"More technical details are available in AirSim paper (FSR 2017 Conference) . Please cite this as: @inproceedings{airsim2017fsr, author = {Shital Shah and Debadeepta Dey and Chris Lovett and Ashish Kapoor}, title = {AirSim: High-Fidelity Visual and Physical Simulation for Autonomous Vehicles}, year = {2017}, booktitle = {Field and Service Robotics}, eprint = {arXiv:1705.05065}, url = {https://arxiv.org/abs/1705.05065} }","title":"Paper"},{"location":"#contribute","text":"Please take a look at open issues if you are looking for areas to contribute to. More on AirSim design More on code structure Contribution Guidelines Trello Board","title":"Contribute"},{"location":"#who-is-using-airsim","text":"We are maintaining a list of a few projects, people and groups that we are aware of. If you would like to be featured in this list please make a request here .","title":"Who is Using AirSim?"},{"location":"#contact","text":"Join the AirSim group on Facebook to stay up to date or ask any questions.","title":"Contact"},{"location":"#faq","text":"If you run into problems, check the FAQ and feel free to post issues in the AirSim repository.","title":"FAQ"},{"location":"#license","text":"This project is released under the MIT License. Please review the License file for more details.","title":"License"},{"location":"build_windows/","text":"Build AirSim on Windows Install Unreal Engine Download the Epic Games Launcher. While the Unreal Engine is open source and free to download, registration is still required. Run the Epic Games Launcher, open the Library tab on the left pane. Click on the Add Versions which should show the option to download Unreal 4.18 as shown below. If you have multiple versions of Unreal installed then make sure 4.18 is set to current by clicking down arrow next to the Launch button for the version. Note : If you have UE 4.16 or older projects, please see the upgrade guide to upgrade your projects. Build AirSim Install Visual Studio 2017. Make sure to select VC++ and Windows SDK 8.1 while installing VS 2017. Start x64 Native Tools Command Prompt for VS 2017 . Clone the repo: git clone https://github.com/Microsoft/AirSim.git , and go the AirSim directory by cd AirSim . Run build.cmd from the command line. This will create ready to use plugin bits in the Unreal\\Plugins folder that can be dropped into any Unreal project. Build Unreal Project Finally, you will need an Unreal project that hosts the environment for your vehicles. AirSim comes with a built-in \"Blocks Environment\" which you can use, or you can create your own. Please see setting up Unreal Environment . Setup Remote Control (Multirotor only) A remote control is required if you want to fly manually. See the remote control setup for more details. Alternatively, you can use APIs for programmatic control or use the so-called Computer Vision mode to move around using the keyboard. How to Use AirSim Once AirSim is set up by following above steps, you can, Double click on .sln file to load the Blocks project in Unreal\\Environments\\Blocks (or .sln file in your own custom Unreal project). If you don't see .sln file then you probably haven't completed steps in Build Unreal Project section above. Select your Unreal project as Start Up project (for example, Blocks project) and make sure Build config is set to \"Develop Editor\" and x64. After Unreal Editor loads, press Play button. Tip: go to 'Edit->Editor Preferences', in the 'Search' box type 'CPU' and ensure that the 'Use Less CPU when in Background' is unchecked. See Using APIs and settings.json for various options available. AirSim on Unity (Experimental) Unity is another great game engine platform and we have an experimental release of AirSim on Unity. Please note that this is work in progress and all features may not work yet. FAQ I get error C100 : An internal error has occurred in the compiler when running build.cmd We have noticed this happening with VS version 15.9.0 and have checked-in a workaround in AirSim code. If you have this VS version, please make sure to pull the latest AirSim code. I get error \"'corecrt.h': No such file or directory\" or \"Windows SDK version 8.1 not found\" Very likely you don't have Windows SDK installed with Visual Studio. How do I use PX4 firmware with AirSim? By default, AirSim uses its own built-in firmware called simple_flight . There is no additional setup if you just want to go with it. If you want to switch to using PX4 instead then please see this guide . I made changes in Visual Studio but there is no effect Sometimes the Unreal + VS build system doesn't recompile if you make changes to only header files. To ensure a recompile, make some Unreal based cpp file \"dirty\" like AirSimGameMode.cpp. Unreal still uses VS2015 or I'm getting some link error Running several versions of VS can lead to issues when compiling UE projects. One problem that may arise is that UE will try to compile with an older version of VS which may or may not work. There are two settings in Unreal, one for for the engine and one for the project, to adjust the version of VS to be used. 1. Edit -> Editor preferences -> General -> Source code 2. Edit -> Project Settings -> Platforms -> Windows -> Toolchain ->CompilerVersion In some cases, these settings will still not lead to the desired result and errors such as the following might be produced: LINK : fatal error LNK1181: cannot open input file 'ws2_32.lib' To resolve such issues the following procedure can be applied: 1. Uninstall all old versions of VS using the VisualStudioUninstaller 2. Repair/Install VS2017 3. Restart machine and install Epic launcher and desired version of the engine","title":"\u5728Windows\u4e0a\u6784\u5efa"},{"location":"build_windows/#build-airsim-on-windows","text":"","title":"Build AirSim on Windows"},{"location":"build_windows/#install-unreal-engine","text":"Download the Epic Games Launcher. While the Unreal Engine is open source and free to download, registration is still required. Run the Epic Games Launcher, open the Library tab on the left pane. Click on the Add Versions which should show the option to download Unreal 4.18 as shown below. If you have multiple versions of Unreal installed then make sure 4.18 is set to current by clicking down arrow next to the Launch button for the version. Note : If you have UE 4.16 or older projects, please see the upgrade guide to upgrade your projects.","title":"Install Unreal Engine"},{"location":"build_windows/#build-airsim","text":"Install Visual Studio 2017. Make sure to select VC++ and Windows SDK 8.1 while installing VS 2017. Start x64 Native Tools Command Prompt for VS 2017 . Clone the repo: git clone https://github.com/Microsoft/AirSim.git , and go the AirSim directory by cd AirSim . Run build.cmd from the command line. This will create ready to use plugin bits in the Unreal\\Plugins folder that can be dropped into any Unreal project.","title":"Build AirSim"},{"location":"build_windows/#build-unreal-project","text":"Finally, you will need an Unreal project that hosts the environment for your vehicles. AirSim comes with a built-in \"Blocks Environment\" which you can use, or you can create your own. Please see setting up Unreal Environment .","title":"Build Unreal Project"},{"location":"build_windows/#setup-remote-control-multirotor-only","text":"A remote control is required if you want to fly manually. See the remote control setup for more details. Alternatively, you can use APIs for programmatic control or use the so-called Computer Vision mode to move around using the keyboard.","title":"Setup Remote Control (Multirotor only)"},{"location":"build_windows/#how-to-use-airsim","text":"Once AirSim is set up by following above steps, you can, Double click on .sln file to load the Blocks project in Unreal\\Environments\\Blocks (or .sln file in your own custom Unreal project). If you don't see .sln file then you probably haven't completed steps in Build Unreal Project section above. Select your Unreal project as Start Up project (for example, Blocks project) and make sure Build config is set to \"Develop Editor\" and x64. After Unreal Editor loads, press Play button. Tip: go to 'Edit->Editor Preferences', in the 'Search' box type 'CPU' and ensure that the 'Use Less CPU when in Background' is unchecked. See Using APIs and settings.json for various options available.","title":"How to Use AirSim"},{"location":"build_windows/#airsim-on-unity-experimental","text":"Unity is another great game engine platform and we have an experimental release of AirSim on Unity. Please note that this is work in progress and all features may not work yet.","title":"AirSim on Unity (Experimental)"},{"location":"build_windows/#faq","text":"","title":"FAQ"},{"location":"build_windows/#i-get-error-c100-an-internal-error-has-occurred-in-the-compiler-when-running-buildcmd","text":"We have noticed this happening with VS version 15.9.0 and have checked-in a workaround in AirSim code. If you have this VS version, please make sure to pull the latest AirSim code.","title":"I get error C100 : An internal error has occurred in the compiler when running build.cmd"},{"location":"build_windows/#i-get-error-corecrth-no-such-file-or-directory-or-windows-sdk-version-81-not-found","text":"Very likely you don't have Windows SDK installed with Visual Studio.","title":"I get error \"'corecrt.h': No such file or directory\" or \"Windows SDK version 8.1 not found\""},{"location":"build_windows/#how-do-i-use-px4-firmware-with-airsim","text":"By default, AirSim uses its own built-in firmware called simple_flight . There is no additional setup if you just want to go with it. If you want to switch to using PX4 instead then please see this guide .","title":"How do I use PX4 firmware with AirSim?"},{"location":"build_windows/#i-made-changes-in-visual-studio-but-there-is-no-effect","text":"Sometimes the Unreal + VS build system doesn't recompile if you make changes to only header files. To ensure a recompile, make some Unreal based cpp file \"dirty\" like AirSimGameMode.cpp.","title":"I made changes in Visual Studio but there is no effect"},{"location":"build_windows/#unreal-still-uses-vs2015-or-im-getting-some-link-error","text":"Running several versions of VS can lead to issues when compiling UE projects. One problem that may arise is that UE will try to compile with an older version of VS which may or may not work. There are two settings in Unreal, one for for the engine and one for the project, to adjust the version of VS to be used. 1. Edit -> Editor preferences -> General -> Source code 2. Edit -> Project Settings -> Platforms -> Windows -> Toolchain ->CompilerVersion In some cases, these settings will still not lead to the desired result and errors such as the following might be produced: LINK : fatal error LNK1181: cannot open input file 'ws2_32.lib' To resolve such issues the following procedure can be applied: 1. Uninstall all old versions of VS using the VisualStudioUninstaller 2. Repair/Install VS2017 3. Restart machine and install Epic launcher and desired version of the engine","title":"Unreal still uses VS2015 or I'm getting some link error"},{"location":"use_precompiled/","text":"Download Binaries You can simply download precompiled binaries and run to get started immediately. If you want to set up your own Unreal environment then please see these instructions . Unreal Engine Windows : Download the binaries for the environment of your choice from the latest release . Linux : Binaries for Ubuntu 16.04 LTS is coming soon. For now you will need to build it on Linux yourself. Unity (Experimental) A free environment called Windridge City is available at Unity Asset Store as an experimental release of AirSim on Unity. Please note that this is work in progress and all features may not work yet. Controlling Vehicles Most of our users typically use APIs to control the vehicles. However if you can also control vehicles manually. You can drive the car using keyboard, gamepad or steering wheel . To fly drone manually, you will need either XBox controller or a remote control (feel free to contribute keyboard support). Please see remote control setup for more details. Alternatively you can use APIs for programmatic control or use so-called Computer Vision mode to move around in environment using the keyboard. Don't Have Good GPU? The AirSim binaries, like CityEnviron, requires a beefy GPU to run smoothly. You can run them in low resolution mode by editing the run.bat file on Windows like this: start CityEnviron -ResX=640 -ResY=480 -windowed","title":"\u4e0b\u8f7d\u4e8c\u8fdb\u5236\u6587\u4ef6"},{"location":"use_precompiled/#download-binaries","text":"You can simply download precompiled binaries and run to get started immediately. If you want to set up your own Unreal environment then please see these instructions .","title":"Download Binaries"},{"location":"use_precompiled/#unreal-engine","text":"Windows : Download the binaries for the environment of your choice from the latest release . Linux : Binaries for Ubuntu 16.04 LTS is coming soon. For now you will need to build it on Linux yourself.","title":"Unreal Engine"},{"location":"use_precompiled/#unity-experimental","text":"A free environment called Windridge City is available at Unity Asset Store as an experimental release of AirSim on Unity. Please note that this is work in progress and all features may not work yet.","title":"Unity (Experimental)"},{"location":"use_precompiled/#controlling-vehicles","text":"Most of our users typically use APIs to control the vehicles. However if you can also control vehicles manually. You can drive the car using keyboard, gamepad or steering wheel . To fly drone manually, you will need either XBox controller or a remote control (feel free to contribute keyboard support). Please see remote control setup for more details. Alternatively you can use APIs for programmatic control or use so-called Computer Vision mode to move around in environment using the keyboard.","title":"Controlling Vehicles"},{"location":"use_precompiled/#dont-have-good-gpu","text":"The AirSim binaries, like CityEnviron, requires a beefy GPU to run smoothly. You can run them in low resolution mode by editing the run.bat file on Windows like this: start CityEnviron -ResX=640 -ResY=480 -windowed","title":"Don't Have Good GPU?"}]}